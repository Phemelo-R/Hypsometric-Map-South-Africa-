---
title: "Hypsometric Map of South Africa"
author: "Phemelo Mojalefa Rutlokoane"
date: "2025-04-23"
format: html
editor: visual
categories: [geography, data-visualization, R]
---

```{r setup, message=FALSE, warning=FALSE}
# Load Libraries
library(tidyverse)          # Data manipulation and visualization
library(scales)             # Scale functions for visualization
library(ggspatial)          # Spatial data visualization
library(rnaturalearth)      # Natural Earth map data
library(rnaturalearthdata)  # Additional Natural Earth map data
library(sf)                 # Simple Features for R
library(raster)             # Raster data manipulation
library(elevatr)            # Get elevation data
library(ggrepel)            # Repulsive text and label geoms
library(rnaturalearthhires) # High resolution Natural Earth data
library(ggnewscale)         # Multiple fill and color scales in ggplot2

# Disable S2 spherical geometry
sf_use_s2(FALSE)
```

## Data Preparation

```{r data-prep}
# Define bounding box for South Africa
xmin <- 14.5
xmax <- 35.5
ymin <- -37.5
ymax <- -22.0
south_africa_bbox <- data.frame(x = c(xmin, xmax), y = c(ymin, ymax))

# Get neighboring countries of South Africa
neighboring_countries <- ne_countries(scale = "medium", returnclass = "sf") %>% 
  filter(name %in% c("Namibia", "Botswana", "Zimbabwe", "Mozambique", "Lesotho", "Eswatini"))

# Get South African provinces
sa_prov <- ne_states(country = "South Africa", returnclass = "sf")

# Get elevation data for the bounding box
elevation_data <- get_elev_raster(locations = south_africa_bbox, z = 5, prj = "+proj=longlat +datum=WGS84")
elevation_df <- as.data.frame(as(elevation_data, "SpatialPixelsDataFrame"))
colnames(elevation_df) <- c("elevation", "x", "y")

# Calculate hillshade from elevation data
slope <- terrain(elevation_data, opt = 'slope')
aspect <- terrain(elevation_data, opt = 'aspect')
hillshade <- hillShade(slope, aspect, angle = 45, direction = 315)
hillshade_df <- as.data.frame(as(hillshade, "SpatialPixelsDataFrame"))
colnames(hillshade_df) <- c("hillshade", "x", "y")

# Get rivers data for South Africa
sa_rivers <- ne_download(scale = "medium", type = "rivers_lake_centerlines", category = "physical", returnclass = "sf") %>% 
  st_crop(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)

# Define mountain ranges with their coordinates
mountain_ranges <- data.frame(
  name = c("Drakensberg", "Cederberg", "Swartberg", "Magaliesberg", "Cape Fold Belt"),
  lon = c(29.4, 19.0, 22.0, 27.5, 18.5),
  lat = c(-29.5, -32.5, -33.4, -25.5, -33.8)
)

# Define coordinates for the Great Escarpment line
escarpments_coords <- data.frame(
  longitude = c(19.0, 22.0, 26.5, 29.5, 30.8, 30.2),
  latitude = c(-32.5, -33.4, -31.0, -29.5, -24.6, -22.9)
)
escarpment_line <- st_linestring(as.matrix(escarpments_coords))
escarpments_sf <- st_sfc(escarpment_line, crs = 4326) %>% 
  st_sf() %>% 
  mutate(feature_type = "Great Escarpment")

# Define coastal features
agulhas_bank <- data.frame(x = c(20, 20, 25, 25, 20), y = c(-37, -34, -34, -37, -37))
benguela_upwelling <- data.frame(x = c(14, 14, 18, 18, 14), y = c(-30, -27, -27, -30, -30))

# Define ocean currents
agulhas_current <- data.frame(x_start = 30, y_start = -33, x_end = 28, y_end = -35)
benguela_current <- data.frame(x_start = 17, y_start = -33, x_end = 15, y_end = -30)

# Define hypsometric colors for elevation
hypsometric_colors <- c(
  "#0A2463", "#3E5F8A", "#5B8CBE", "#7BAFD4", "#A7C6E8",  # Water
  "#E8F1D4", "#D4E6B3", "#A7C686", "#8FB05D", "#6B8C3A",  # Lowlands
  "#E3C88F", "#D9B56B", "#C99E4F", "#B58234", "#A66B1E",  # Midlands
  "#BF4E30", "#A73725", "#8C1D1D", "#731F1F",             # Highlands
  "#5D1F1C", "#3D0C02", "#2A0800"                         # Peaks
)
```

## Map Construction

```{r map-construction, fig.cap="Hypsometric Map of South Africa"}
ggplot() +
  # Add hillshade data
  geom_raster(data = hillshade_df, aes(x, y, fill = hillshade)) + 
  scale_fill_gradient(low = "black", high = "white", guide = "none") +
  
  # Add elevation data
  geom_raster(data = elevation_df, aes(x, y, fill = elevation), alpha = 0.9) +
  scale_fill_gradientn(
    colours = hypsometric_colors,
    name = "Elevation (m)",
    values = scales::rescale(c(-5500, 0, 500, 1000, 2000, 3500)), 
    limits = c(-5500, 3500), # Set limits for elevation
    na.value = "transparent"
  ) +
  
  # Add coastal features
  new_scale_fill() + # Add a new scale for fill
  
  geom_polygon(data = agulhas_bank, aes(x, y, fill = "Agulhas Bank"), alpha = 0.3, color = "red") +
  geom_polygon(data = benguela_upwelling, aes(x, y, fill = "Benguela Upwelling"), alpha = 0.3, color = "blue") + 
  scale_fill_manual(name = "Coastal Features", values = c("Agulhas Bank" = "red", "Benguela Upwelling" = "blue")) +
  
  # Add contours and borders
  geom_contour(data = elevation_df, aes(x, y, z = elevation), color = "black", size = 0.1, bins = 200, alpha = 0.08) +
  borders("world", region = "South Africa", fill = NA, color = "black") +
  geom_sf(data = sa_prov, fill = NA, color = "black", size = 0.5) +
  
  # Add hydrographic features
  geom_sf(data = sa_rivers, aes(color = "Rivers"), size = 0.7) +
  geom_sf(data = escarpments_sf, aes(color = feature_type), size = 1, linetype = "dashed") +
  scale_color_manual(
    name = "Linear Features",
    values = c("Rivers" = "blue", "Great Escarpment" = "red2"),
    guide = guide_legend(
      override.aes = list(
        Rivers = list(linetype = "solid"),
        `Great Escarpment` = list(linetype = "dashed")
      )
    )
  ) +
  
  # Add ocean currents
  geom_segment(data = agulhas_current, aes(x = x_start, y = y_start, xend = x_end, yend = y_end), 
               color = "red", linewidth = 1, arrow = arrow(length = unit(0.3, "cm"), type = "closed")) +
  geom_segment(data = benguela_current, aes(x = x_start, y = y_start, xend = x_end, yend = y_end), 
               color = "blue", linewidth = 1, arrow = arrow(length = unit(0.3, "cm"), type = "closed")) +
  
  # Add labels for ocean currents
  geom_text(aes(x = 27.5, y = -34, label = "Agulhas Current"), color = "red", size = 3.5, angle = 43, fontface = "bold") + 
  geom_text(aes(x = 15.1, y = -32, label = "Benguela Current"), color = "blue", size = 3.5, angle = 300, fontface = "bold") +
  
  # Add mountain ranges and their labels
  geom_point(data = mountain_ranges, aes(lon, lat, shape = "Mountain Ranges"), color = "black", size = 3, stroke = 1, fill = "red2") +
  geom_label_repel(data = mountain_ranges, aes(lon, lat, label = name), color = "black", size = 3, box.padding = 0.5, point.padding = 0.5,
                   min.segment.length = 0.8, segment.color = "black", alpha = 0.8, fill = "white") +
  scale_shape_manual(
    name = "Point Features",
    values = c("Mountain Ranges" = 21),
    guide = guide_legend(override.aes = list(fill = "red2", size = 3))
  ) +
  
  # Add neighboring countries and their labels
  geom_sf(data = neighboring_countries, fill = NA, color = "black", size = 0.5) +
  geom_sf_text(data = neighboring_countries, aes(label = name), color = "black", size = 3, fontface = "bold") +
  
  # Add labels for oceans
  annotate("text", label = "Atlantic\nOcean", x = 15.1, y = -35.0, size = 5.0, angle = 30, colour = "black") + 
  annotate("text", label = "Indian\nOcean", x = 32.2, y = -35.2, size = 5.0, angle = 330, colour = "black") +
  
  # Set coordinate system limits
  coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +
  
  # Add theme and labels
  theme_minimal() + 
  labs(
    title = "Hypsometric Map of South Africa", 
    subtitle = "Elevation data with rivers, provinces, mountain ranges, great escarpment and coastal features", 
    caption = "Sources: NASA SRTM Elevation (elevatr), Natural Earth\nCreated with R | Â© Phemelo Mojalefa Rutlokoane", 
    x = "Longitude", y = "Latitude"
  ) + 
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
    plot.subtitle = element_text(hjust = 0.5, size = 12),
    legend.position = "right",
    legend.justification = "left", 
    legend.background = element_rect(fill = "white", color = "black", size = 0.2),
    legend.box = "vertical",
    axis.title = element_text(face = "bold")
  ) +
  
  # Add map elements: scale bar and north arrow
  annotation_scale(
    location = "bl",
    width_hint = 0.4,
    bar_cols = c("black", "white"),
    line_width = 1,
    text_cex = 0.8,
    text_face = "bold",
    tick_height = 0.6
  ) +
  annotation_north_arrow(
    location = "tl",
    which_north = "true",
    pad_x = unit(0.3, "in"),
    pad_y = unit(0.3, "in"),
    style = north_arrow_fancy_orienteering
  )
```

## Save as PDF

```{r save-pdf, echo=FALSE}
ggsave("hypsometric_map_south_africa.pdf", plot = last_plot(), device = "pdf", width = 16, height = 12, dpi = 300)
```
